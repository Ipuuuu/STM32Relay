# STM32Relay

A PlatformIO library for communicating with STM32 microcontrollers over UART/I2C interfaces. This library provides a simple and reliable way to control digital and analog I/O operations on STM32 devices remotely.

## Features

- Digital Input/Output operations
- Analog Read/Write functionality
- PPM (Pulse Position Modulation) signal generation
- Supports both UART and I2C communication
- Built-in parity checking for reliable communication
- Compatible with common STM32 pins (PA, PB, PC series)

## Installation

This library can be used in PlatformIO projects. To install:

1. Create a new PlatformIO project
2. Add this library to your `platformio.ini` dependencies
3. Include the header file in your project

## Usage

### Basic Setup

```cpp
#include <STM32Relay.h>

// Initialize relay with UART communication
STM32Relay relay(STM32Relay::UART, TX_PIN, RX_PIN);

void setup() {
    // Begin communication at specified baud rate
    relay.begin(115200);
}
```

### Digital Operations

```cpp
// Digital Write
relay.digitalWrite(Relay::PA5, HIGH);

// Digital Read
bool value = relay.digitalRead(Relay::PB1);
```

### Analog Operations

```cpp
// Analog Write (PWM)
relay.analogWrite(Relay::PA0, 128); // 0-255 value

// Analog Read
int value = relay.analogRead(Relay::PA1); // Returns 12-bit value (0-4095)
```

### PPM Signal Generation

```cpp
// Generate PPM signal with specified pulse width
relay.writePPM(Relay::PB0, 1500); // 1500 microseconds
```

## Pin Mapping

The library provides easy-to-use pin definitions for STM32 microcontrollers:

- PA0-PA15
- PB0-PB15
- PC13-PC15
- Alternative pin functions supported

## Communication Protocol

The library implements a robust communication protocol with:
- Sync bit verification
- Parity checking
- Command verification
- Timeout handling

## Contributing

Contributions are welcome! Please feel free to submit a Pull Request.

## License

[...]

## Author

Ipuuuu

## Version History

- Initial Release
